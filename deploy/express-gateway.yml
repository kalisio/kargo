version: '3.5'

services: 
  express-gateway:
    image: ${EXPRESS_GATEWAY_IMAGE}:${EXPRESS_GATEWAY_TAG}
    environment:
      - KEY_SECRET=${EXPRESS_GATEWAY_KEY_SECRET}
      - HTTP_PROXY
      - HTTPS_PROXY
      - NO_PROXY      
      - MAPTILER_KEY=${MAPTILER_KEY}
      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
    configs:
      - source: system_conf
        target: /var/lib/eg/system.config.yml
      - source: gateway_conf
        target: /var/lib/eg/gateway.config.yml
      - source: consumers_conf
        target: /var/lib/eg/consumers.config.js
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:8080/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      labels:
        - "traefik.docker.network=${DOCKER_FRONT_NETWORK}"
        - "traefik.backend=express-gateway"        
        - "traefik.enable=true"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.frontend.rule=Host:api.${SUBDOMAIN}"
        - "traefik.port=8080"        
      replicas: ${EXPRESS_GATEWAY_REPLICAS}
      placement:
        constraints:
         - node.role == manager
      restart_policy:
        condition: on-failure
    networks:
      - kargo-front-network        
      - kargo-back-network

configs:
  system_conf:
    file: ./../configs/express-gateway/system.config.yml
  gateway_conf:
    file: ./../configs/express-gateway/gateway.config.yml
  consumers_conf:
    file: ./../configs/express-gateway/consumers.config.js

networks:
  kargo-front-network:
    name: ${DOCKER_FRONT_NETWORK}
    external: true
  kargo-back-network:
    name: ${DOCKER_BACK_NETWORK}
    external: true