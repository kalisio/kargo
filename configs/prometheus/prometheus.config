# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'Prometheus'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - 'rules/*.yml'

# alert
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # - job_name: 'prometheus'
  #   static_configs:
  #     - targets: ['localhost:9090']

  # # scrape docker daemons
  # - job_name: 'docker'
  #   dockerswarm_sd_configs:
  #     - host: tcp://docker-socket-proxy:2375
  #       role: nodes
  #   relabel_configs:
  #     - source_labels: [__meta_dockerswarm_node_address]
  #       target_label: __address__
  #       replacement: $1:9323
  #     - source_labels: [__meta_dockerswarm_node_hostname]
  #       target_label: instance

  # discover node-exporter jobs
  # node-exporter is run as global service in the swarm
  - job_name: 'node-exporter'
    dockerswarm_sd_configs:
      - host: tcp://docker-socket-proxy:2375
        role: tasks
        port: 9100
    relabel_configs:
      # keep tasks whose service name ends with _node_exporter
      - source_labels: [__meta_dockerswarm_service_name]
        regex: '[^_]+_node-exporter'
        action: keep
      # keep tasks that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # replace 'instance' with docker node hostname instead of docker's internal adress
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: instance

  # discover cadvisor jobs
  # cadvisor is run as global service in the swarm
  - job_name: 'cadvisor'
    dockerswarm_sd_configs:
      - host: tcp://docker-socket-proxy:2375
        role: tasks
        port: 8080
    relabel_configs:
      # keep tasks whose service name ends with _cadvisor
      - source_labels: [__meta_dockerswarm_service_name]
        regex: '[^_]+_cadvisor'
        action: keep
      # keep tasks that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # replace 'instance' with docker node hostname instead of docker's internal adress
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: instance
    metric_relabel_configs:
      # produce readable stack names
      - source_labels: [container_label_com_docker_swarm_service_name]
        target_label: container_label_com_docker_stack_namespace
        regex: kargo-([^_]+)_.*
      # produce readable service names
      - source_labels: [container_label_com_docker_swarm_service_name]
        target_label: container_label_com_docker_swarm_service_name
        regex: kargo-[^_]+_(.*)
      # drop some labels we don't care about
      - regex: name|id|image
        action: labeldrop

  # discover user scrape jobs
  - job_name: 'user-scrape-jobs'
    dockerswarm_sd_configs:
      - host: tcp://docker-socket-proxy:2375
        role: tasks
    relabel_configs:
      # keep tasks with a prometheus.job label
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        regex: .+
        action: keep
      # keep tasks that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # use label as job
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        target_label: job
      # update scrape address using provided port
      - source_labels: [__address__, __meta_dockerswarm_service_label_prometheus_port]
        target_label: __address__
        regex: ([^:]+):([^;]+);(.*)
        replacement: $1:$3
      # add docker_node with value of node hostname running the task
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: docker_node
