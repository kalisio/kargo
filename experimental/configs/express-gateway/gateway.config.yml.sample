http:
  port: 8080
admin:
  port: 9876
apiEndpoints:
  mapproxy:
    host: '*'
    paths: '/mapproxy/*'
    scopes: ["mapproxy"]
  mapserver:
    host: '*'
    paths: '/mapserver/*'
    scopes: ["mapserver"]
  k2:
    host: '*'
    paths: '/k2/*'
    scopes: ["k2"]

serviceEndpoints:
  mapproxy:
    url: 'http://mapproxy:8080'
  mapserver:
    url: 'http://mapserver'
  k2:
    url: 'http://k2:8080'

serviceEndpoints:
  mapproxy:
    url: 'http://mapproxy:8080'
  mapserver:
    url: 'http://mapserver'
  k2:
    url: 'http://k2:8080'

policies:
  - cors
  - key-auth
  - jwt
  - log
  - proxy
  - rate-limit

pipelines:
  mapserver:
    apiEndpoints:
      - mapserver
    policies:
      - key-auth:
          - action:
              passThrough: true        
      - jwt:
          - condition:
              name: anonymous
            action:
              secretOrPublicKey: SECRET_KEY
              checkCredentialExistence: false        
      - log:
          - action:
              message: ${req.method} ${req.originalUrl}
      - proxy:
          - action:
              serviceEndpoint: mapserver 
              changeOrigin: true
              stripPath: true
  mapproxy:
    apiEndpoints:
      - mapproxy
    policies:
      - key-auth:
          - action:
              passThrough: true        
      - jwt:
          - condition:
              name: anonymous
            action:
              secretOrPublicKey: SECRET_KEY
              checkCredentialExistence: false        
      - log:
          - action:
              message: ${req.method} ${req.originalUrl}              
      - proxy:
          - action:
              serviceEndpoint: mapproxy 
              changeOrigin: true
              stripPath: true
  k2:
    apiEndpoints:
      - k2
    policies:
      - key-auth:
          - action:
              passThrough: true
      - jwt:
          - condition:
              name: anonymous
            action:
              secretOrPublicKey: SECRET_KEY
              checkCredentialExistence: false
      - log:
          - action:
              message: ${req.method} ${req.originalUrl}
      - proxy:
          - action:
              serviceEndpoint: k2
              changeOrigin: true
              stripPath: true



