apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "common.names.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "common.names.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ include "common.names.name" . }}
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ include "common.names.name" . }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ include "common.names.name" . }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /.filebrowser.json
              subPath: filebrowser.json
            - name: db
              mountPath: /db
            - name: rootdir
              mountPath: /srv
              subPath: {{ include "common.tplvalues.render" ( dict "value" .Values.rootDirSubPath "context" $) }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "common.names.fullname" . }}
        - name: db
          {{- if .Values.db.pvc.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.db.pvc.existingClaimName | default (printf "%s-%s" (include "common.names.fullname" .) "db" ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: rootdir
          {{- if eq .Values.rootDir.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ .Values.rootDir.pvc.existingClaimName | default (printf "%s-%s" (include "common.names.fullname" .) "rootdir" ) }}
          {{- else if eq .Values.rootDir.type "hostPath" }}
          hostPath:
            path: {{ .Values.rootDir.hostPath.path }}
          {{- else if eq .Values.rootDir.type "nfs"}}
          nfs:
            server: {{ .Values.rootDir.nfs.server }}
            path: {{ .Values.rootDir.nfs.path }}
          {{- else }}
          emptyDir: {}
          {{- end }}