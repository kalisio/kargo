apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kargo.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "kargo.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "kargo.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "kargo.labels.standard" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kargo.names.serviceAccount" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.envsubstConfig.enabled }}
        {{- include "kargo.envsubstConfig.renderInitContainer" ( dict "args" .Values.envsubstConfig "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.initContainers }}
        {{- include "kargo.tplvalues.render" ( dict "value" .Values.initContainers "context" $ ) | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ include "kargo.names.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HTTP_PROXY
            - name: HTTPS_PROXY
            - name: NO_PROXY
          ports:
            - name: {{ include "kargo.names.name" . }}
              containerPort: {{ .Values.containerPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/mapserver
              readOnly: true
              name: mapserver-config
            - mountPath: /mnt/data
              readOnly: true
              name: mapserver-data
              {{- if .Values.dataSubPath }}
              subPath: {{ include "kargo.tplvalues.render" ( dict "value" .Values.dataSubPath "context" $ ) }}
              {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "kargo.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
      volumes:
        - name: mapserver-config
          {{- if .Values.envsubstConfig.enabled }}
          emptyDir: {}
          {{- else if .Values.configVolume }}
          {{- include "kargo.tplvalues.render" ( dict "value" .Values.configVolume "context" $ ) | nindent 10 }}
          {{- end }}
        - name: mapserver-data
          {{- if .Values.dataVolume }}
          {{- include "kargo.tplvalues.render" ( dict "value" .Values.dataVolume "context" $ ) | nindent 10 }}
          {{- end }}
        {{- if .Values.envsubstConfig.enabled }}
        {{- include "kargo.envsubstConfig.renderVolume" ( dict "args" .Values.envsubstConfig "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "kargo.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
