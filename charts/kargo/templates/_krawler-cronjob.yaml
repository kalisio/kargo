{{- define "kargo.krawler-cronjob" -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "kargo.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "kargo.labels.standard" . | nindent 4 }}
    {{- if .Values.forceRestart }}
    helm.sh/restartedAt: {{ now | unixEpoch |quote }}
    {{- end }}
    {{- if .Values.commonLabels }}
    {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  schedule: "{{ .Values.cron }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template: 
        spec:
          # Add a deadline so that if the job never finishes it will be stopped anyway
          # Could also be done using concurrencyPolicy = Replace but a deadline seems to be more flexible,
          # allowing a job to be temporarily slower than usual and to at least finish
          activeDeadlineSeconds: {{ .Values.deadline | default 3600 }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
            - name: {{ include "kargo.names.name" . }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ ternary "Always" .Values.image.pullPolicy .Values.forceRestart }}
              env:          
                - name: CRON
                  value: "" 
              {{- include "kargo.environment.render" (dict "env" .Values.env "context" $) | indent 16 }}
              {{- if .Values.dataVolume }}
              volumeMounts:
                - mountPath: {{ .Values.dataMountPath | default "/data" }}
                  name: job-data
                  {{- if .Values.dataSubPath }}
                  subPath: {{ include "kargo.tplvalues.render" ( dict "value" .Values.dataSubPath "context" $) }}
                  {{- end }}
              {{- end }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          restartPolicy: Never
          {{- if .Values.dataVolume }}
          volumes:
            - name: job-data
              {{- include "kargo.tplvalues.render" ( dict "value" .Values.dataVolume "context" $ ) | nindent 14 }}
          {{- end }}
{{- end -}}
