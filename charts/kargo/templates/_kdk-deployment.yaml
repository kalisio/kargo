{{- define "kargo.kdk-deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kargo.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "kargo.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "kargo.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "kargo.labels.standard" . | nindent 8 }}
        {{- if .Values.forceRestart }}
        helm.sh/restartedAt: {{ now | unixEpoch |quote }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kargo.names.serviceAccount" . }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "kargo.names.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ ternary "Always" .Values.image.pullPolicy .Values.forceRestart }}
          env:
            - name: SUBDOMAIN
              value: {{ .Values.global.subdomain }}
            {{- if .Values.distribution.enabled }}
            - name: DISCOVERY_HOSTNAME
              value: {{ include "kargo.names.fullname" . }}
            - name: BASE_PORT
              value: {{ .Values.distribution.basePort | quote }}
            - name: HIGHEST_PORT
              value: {{ .Values.distribution.highestPort | quote }}
            - name: COTE_DELAY
              value: {{ .Values.distribution.startDelay | quote }}
            - name: COTE_DISCOVERY_REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.distribution.redisUrl.secret | default (include "kargo.names.secret" .) }}
                  key: {{ .Values.distribution.redisUrl.key | default "redis-url" }}
            {{- end }}
            {{- include "kargo.environment.render" (dict "env" .Values.env "context" $) | indent 12 }}
          ports:
            - name: {{ include "kargo.names.name" . | trunc 15 }}
              containerPort: {{ .Values.containerPort | default 8081 }}
            {{- if .Values.distribution.enabled }}
            {{- range untilStep (int .Values.distribution.basePort) (int .Values.distribution.highestPort) 1 }}
            - name: "cote-{{ . }}"
              containerPort: {{ . }}
            {{- end }}
            {{- end }}
          readinessProbe:
            tcpSocket:
              port: {{ include "kargo.names.name" . | trunc 15 }}
            initialDelaySeconds: {{ .Values.readinessDelay | default 5 }}
            periodSeconds: {{ .Values.readinessPeriod | default 10 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessEndpoint | default "/healthcheck" }}
              port: {{ include "kargo.names.name" . | trunc 15 }}
            initialDelaySeconds: {{ .Values.livenessDelay | default 60 }}
            periodSeconds: {{ .Values.livenessPeriod | default 60 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if hasKey .Values "additionalConfig" }}
          volumeMounts:
            {{- range $key, $value := .Values.additionalConfig.fileMapping }}
            - mountPath: {{ $value }}
              name: {{ include "kargo.names.name" $ }}-config
              subPath: {{ $key }}
              readOnly: true
            {{- end }}
          {{- end }}
      {{- if hasKey .Values "additionalConfig" }}
      volumes:
        - name: {{ include "kargo.names.name" . }}-config
          configMap:
            name: {{ include "kargo.tplvalues.render" ( dict "value" .Values.additionalConfig.configMap "context" $ ) }}
      {{- end }}
{{- end }}
