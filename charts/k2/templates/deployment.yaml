apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kargo.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "kargo.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "kargo.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "kargo.labels.standard" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "kargo.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ include "kargo.names.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "kargo.environment.render" (dict "env" .Values.env "context" $) | indent 12 }}
          ports:
            - name: {{ include "kargo.names.name" . }}
              containerPort: 8080
          volumeMounts:
            - mountPath: /mbtiles
              readOnly: true
              name: k2-data
              {{- if .Values.dataSubPath }}
              subPath: {{ include "kargo.tplvalues.render" ( dict "value" .Values.dataSubPath "context" $ ) }}
              {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "kargo.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
          readinessProbe:
            tcpSocket:
              port: {{ include "kargo.names.name" . }}
            initialDelaySeconds: 5
            periodSeconds: 10              
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{ include "kargo.names.name" . }}
            initialDelaySeconds: 30
            periodSeconds: 15
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: k2-data
          {{- if .Values.dataVolume }}
          {{- include "kargo.tplvalues.render" ( dict "value" .Values.dataVolume "context" $ ) | nindent 10 }}
          {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "kargo.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
