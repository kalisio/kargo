(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{180:function(e,t,s){"use strict";s.r(t);var r=s(0),a=Object(r.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),s("p",[e._v("Then, the directory structure will look like:")]),e._v(" "),e._m(6),e._m(7),e._v(" "),e._m(8),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Before deploying, do not forget to make the "),s("strong",[e._v("merged workspace")]),e._v(" using the "),s("router-link",{attrs:{to:"./../reference/cli.html#make-kargo"}},[e._v("make-kargo")]),e._v(" command.")],1)])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"advanced-usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#advanced-usage","aria-hidden":"true"}},[this._v("#")]),this._v(" Advanced usage")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"extending-the-services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extending-the-services","aria-hidden":"true"}},[this._v("#")]),this._v(" Extending the services")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Kargo")]),this._v(" allows you to extend the default services settings for a given cluster. You can either overwrite the default settings files of a service or extend the way the service will be deployed (specify the healthcheck, add some constraints...)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("For this you must create a directory structure in your workspace similar to that of "),t("strong",[this._v("Kargo")]),this._v(" where you will put your stuff.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("For instance, if we have 2 services, "),t("code",[this._v("service-1")]),this._v(" and "),t("code",[this._v("service-2")]),this._v(", and we want to:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("overwrite the configuration of "),t("code",[this._v("service-1")]),this._v(" as well as extend the its deployment method.")]),this._v(" "),t("li",[this._v("overwrite the configuration of "),t("code",[this._v("service-2")]),this._v(" only.")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("workspace"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("_ deploy\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("service-1"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("label"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(".yml   the yml extension you want to apply when deployin the service-1\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("_ configs\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("service-1"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("_ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("         the settings files of the service-1 you need to overwrite \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("service-2"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("        "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("_ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("         the settings files of the service-2 you need to overwrite \n")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("When extending the deployment method of a service, you must tell "),s("strong",[e._v("Kargo")]),e._v(" which file to add when deploying the service.\nFor each service, you need to declare a variable in the "),s("code",[e._v(".env")]),e._v(" file which tell the name of the "),s("code",[e._v("yml")]),e._v(" file to take into account. In the previous example, the entry in the "),s("code",[e._v(".env")]),e._v(" file should look like:")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("SERVICE-1"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("_EXTENSION"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("service-1"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("label"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])])}],!1,null,null,null);a.options.__file="advanced-usage.md";t.default=a.exports}}]);