(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{181:function(e,a,t){"use strict";t.r(a);var r=t(0),v=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cli","aria-hidden":"true"}},[e._v("#")]),e._v(" CLI")]),e._v(" "),t("h2",{attrs:{id:"build-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-service","aria-hidden":"true"}},[e._v("#")]),e._v(" build-service")]),e._v(" "),t("p",[t("code",[e._v("usage: build-service.sh <mapproxy|geoserver|maputnik|weacast-loaders>")])]),e._v(" "),t("p",[e._v("Builds the docker image corresponding to the desired service and push it into "),t("strong",[e._v("registry")]),e._v(".")]),e._v(" "),t("p",[e._v("The services that can be built are the following:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("command parameter")]),e._v(" "),t("th",[e._v("services")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("mapproxy")])]),e._v(" "),t("td",[e._v("the "),t("strong",[e._v("MapProxy")]),e._v(" application. The version to build is read from the "),t("code",[e._v("MAPPROXY_TAG")]),e._v(" variable.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("geoserver")])]),e._v(" "),t("td",[e._v("the "),t("strong",[e._v("GeoServer")]),e._v(". The version as well as the list of plugins to build are read from the "),t("code",[e._v("GEOSERVER_TAG")]),e._v("  and "),t("code",[e._v("GEOSERVER_PLUGINS")]),e._v(" variables.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("maputnik")])]),e._v(" "),t("td",[e._v("the "),t("strong",[e._v("Maputnik")]),e._v(". The version to build is read from the "),t("code",[e._v("MAPUTNIK_TAG")]),e._v(" variable.")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("weacast-loaders")])]),e._v(" "),t("td",[e._v("The list of the loaders to be build is read from the "),t("code",[e._v("WEACAST_MODELS")]),e._v(" variable. For all the loaders to be built, the version and database url are read from the "),t("code",[e._v("WEACAST_LOADER_TAG")]),e._v(" and "),t("code",[e._v("WEACAST_DB_URL")]),e._v(" variables.")])])])]),e._v(" "),t("h2",{attrs:{id:"deploy-kargo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy-kargo","aria-hidden":"true"}},[e._v("#")]),e._v(" deploy-kargo")]),e._v(" "),t("p",[t("code",[e._v("usage: deploy-kargo.sh")])]),e._v(" "),t("p",[e._v("Deploys all the stacks you have defined the "),t("code",[e._v("STACKS")]),e._v(" variable. The stacks are deployed in the order defined in the "),t("code",[e._v("STACKS")]),e._v(" variable.")]),e._v(" "),t("h2",{attrs:{id:"deploy-stack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy-stack","aria-hidden":"true"}},[e._v("#")]),e._v(" deploy-stack")]),e._v(" "),t("p",[t("code",[e._v("usage: deploy-stack.sh <stack>")])]),e._v(" "),t("p",[e._v("Deploys the specified stack. The stack must be defined in the "),t("code",[e._v("STACKS")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"make-kargo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#make-kargo","aria-hidden":"true"}},[e._v("#")]),e._v(" make-kargo")]),e._v(" "),t("p",[t("code",[e._v("usage: make-kargo.sh <workspace>")])]),e._v(" "),t("p",[e._v("Makes the final kargo deployable configuration by merging the default Kargo configuration with the given workspace configuration. The final configuration files is stored in the "),t("code",[e._v(".kargo")]),e._v(" directory")]),e._v(" "),t("h2",{attrs:{id:"remove-kargo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remove-kargo","aria-hidden":"true"}},[e._v("#")]),e._v(" remove-kargo")]),e._v(" "),t("p",[t("code",[e._v("usage: remove-kargo.sh")])]),e._v(" "),t("p",[e._v("Removes all the stacks you have defined in the "),t("code",[e._v("STACKS")]),e._v(" variable. The stacks are removed in the inverse order defined in the "),t("code",[e._v("STACKS")]),e._v(" variable.")]),e._v(" "),t("h2",{attrs:{id:"remove-stack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remove-stack","aria-hidden":"true"}},[e._v("#")]),e._v(" remove-stack")]),e._v(" "),t("p",[t("code",[e._v("usage: remove-stack.sh <stack>")])]),e._v(" "),t("p",[e._v("Removes the specified stack. The stack must be defined in the "),t("code",[e._v("STACKS")]),e._v(" variable.")])])}],!1,null,null,null);v.options.__file="cli.md";a.default=v.exports}}]);